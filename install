#!/bin/sh

download_pkgs() {
	# Update mirrors
	pacman -S reflector
	systemctl enable reflector.timer
	systemctl start reflector.service

	# Install AUR helper
	pacman -S --needed git base-devel
	git clone https://aur.archlinux.org/yay.git
	cd yay
	makepkg -si
	cd ..
	rm -rf yay

	yay -Syu $(cat other.pkgs | tr '\n' ' ')
}

setup_partitions() {
	is_uefi=0
	ls /sys/firmware/efi/efivars > /dev/null && is_uefi=1

	# TODO: disk partitioning
	fdisk -l
	printf 'Enter drive to install to: '; read -r drive

	# Format and mount partitions
	mkfs.fat -F 32 /dev/"$drive"1
	mkfs.ext4 /dev/"$drive"2
	mount /dev/"$drive"2 /mnt
	mkdir /mnt/boot; mount /dev/"$drive"1 /mnt/boot

	genfstab -U /mnt >> /mnt/etc/fstab
}

setup_env() {
	download_pkgs
	ln -sf /usr/share/zoneinfo/Europe/London /etc/localtime
	hwclock --systohc
	locale-gen
	printf 'LANG=en_GB.UTF-8' >> /etc/locale.conf
	printf 'KEYMAP=uk' >> /etc/vconsole.conf
	printf 'Enter a hostname: '; read -r hostname
	printf '127.0.0.1	localhost\n::1		localhost\n127.0.1.1	"$hostname".localdomain "$hostname"' >> /etc/hosts
}

setup_boot() {
	# Replaces mkinitcpio with dracut
	dracut /boot/initramfs-linux.img
	dracut -N /boot/initramfs-linux-fallback.img
	pacman -Rs mkinitcpio

	# Install microcode for the appropriate vendor
	vendor=$(cat /proc/cpuinfo | grep vendor_id | uniq | cut -d ' ' -f 2)
	case $vendor in 
		AuthenticAMD)
			ucode=amd-ucode
			;;
		GenuineIntel)
			ucode=intel-ucode
			;;
	esac
	pacman -S $ucode

	disk=/dev/sda
	boot_part=1
	root_part_uuid=$(blkid -o export "$disk$part" | grep PARTUUID | cut -d '=' -f 2)

	# Sets up boot entry
	efibootmgr \
		--disk $disk \
		--part $boot_part \
		--create \
		--label 'Arch Linux' \
		--loader /vmlinuz-linux \
		--unicode \
			"root=PARTUUID=$root_part_uuid \
			rw \
			initrd=\\$ucode.img \
			initrd=\\initramfs-linux.img \
			sysrq_always_enabled=1" \
		--verbose

}

improve_fonts() {
	cd /etc/fonts/conf.d
	ln -s ../conf.avail/10-sub-pixel-rgb.conf
	ln -s ../conf.avail/11-lcdfilter-default.conf
	ln -s ../conf.avail/70-no-bitmaps.conf
}

enable_services() {
	systemctl enable nftables.service
	systemctl enable NetworkManager.service
	systemctl enable cups.socket
}

install_dotfiles() {
	cd $HOME
	git clone https://github.com/mzyzc/dotfiles.git
	git submodule update --init --recursive
}

# Pre-installation setup
timedatectl set-ntp true && echo "System time synchronized!"

# Set up the core system
setup_partitions
pacstrap /mnt $(cat essential.pkgs | tr '\n' ' ')

# Set up the environment
arch-chroot /mnt
setup_env
enable_services
improve_fonts
setup_boot
passwd

# Finish up
exit
umount -R /mnt && reboot
